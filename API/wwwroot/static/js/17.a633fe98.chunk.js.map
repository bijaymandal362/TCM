{"version":3,"sources":["store/actions/userActionCreators.ts","pages/User/UserList.tsx"],"names":["getUserList","data","a","setHeaders","axiosInstance","url","method","params","response","getUserMetaList","updateUser","getUserDetail","user","requestUrl","UserList","useHistory","useState","userList","setUserList","userTypeMeta","setUserTypeMeta","loading","setLoading","page","setPage","sortBy","setSortBy","currentTab","setCurrentTab","search","setSearch","useDebounce","filter","tableColumns","title","key","dataIndex","render","text","record","email","className","src","moment","local","format","size","to","userId","getUsers","PageNumber","SearchValue","PageSize","roleId","error","message","getUserTypeMeta","err","Array","isArray","length","String","useEffect","extra","span","mode","onClick","e","style","background","borderBottom","overflowedIndicator","selectedKeys","map","item","Item","name","userCount","lg","md","xs","prefix","color","placeholder","value","onChange","target","options","label","onSelect","val","dataSource","columns","pagination","pageSize"],"mappings":"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","file":"static/js/17.a633fe98.chunk.js","sourcesContent":["import axiosInstance from \"../../axios/axios\";\r\nimport { setHeaders } from \"../../util/localStorage.util\";\r\n\r\nexport const getUserList = async (data: {\r\n  PageNumber: number;\r\n  SearchValue: string | null;\r\n  PageSize: number;\r\n  roleId: string | number;\r\n}): Promise<[any, any]> => {\r\n  setHeaders();\r\n  try {\r\n    const response = await axiosInstance({\r\n      url: \"/User/GetUserListFilterByRole\",\r\n      method: \"GET\",\r\n      params: data,\r\n    });\r\n    return [response, null];\r\n  } catch (err) {\r\n    return [null, err];\r\n  }\r\n};\r\n\r\nexport const getUserMetaList = async (): Promise<[any, any]> => {\r\n  setHeaders();\r\n  try {\r\n    const response = await axiosInstance({\r\n      url: \"/User/GetRoleList\",\r\n      method: \"GET\",\r\n    });\r\n    return [response, null];\r\n  } catch (err) {\r\n    return [null, err];\r\n  }\r\n};\r\n\r\nexport const updateUser = async (data: any): Promise<[any, any]> => {\r\n  setHeaders();\r\n  try {\r\n    const response = await axiosInstance({\r\n      url: \"/User/UpdateUser\",\r\n      method: \"POST\",\r\n      params: data,\r\n    });\r\n    return [response, null];\r\n  } catch (err) {\r\n    return [null, err];\r\n  }\r\n};\r\n\r\nexport const getUserDetail = async (\r\n  user: string | number\r\n): Promise<[any, any]> => {\r\n  setHeaders();\r\n  try {\r\n    const requestUrl = `/User/GetUserDetail/${user}`;\r\n    const response = await axiosInstance({\r\n      url: requestUrl,\r\n      method: \"GET\",\r\n    });\r\n    return [response, null];\r\n  } catch (err) {\r\n    return [null, err];\r\n  }\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n\r\n  Tag,\r\n  PageHeader,\r\n  Divider,\r\n  Menu,\r\n  Col,\r\n  Row,\r\n  message,\r\n  Input,\r\n  Select,\r\n  Table,\r\n  Avatar,\r\n  Space\r\n} from \"antd\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getUserList, getUserMetaList } from \"../../store/actions/userActionCreators\";\r\nimport { EditOutlined, SearchOutlined, SettingOutlined } from \"@ant-design/icons\";\r\nimport { UserListItem, UserTypeMetaInterface } from \"../../interfaces\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\n\r\nconst UserList = () => {\r\n  const history = useHistory();\r\n  const [userList, setUserList] = useState([]);\r\n  const [userTypeMeta, setUserTypeMeta] = useState<UserTypeMetaInterface[]>([])\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [sortBy, setSortBy] = useState('name');\r\n  const [currentTab, setCurrentTab] = useState<string | null>(null);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [filter] = useDebounce(search, 1000);\r\n\r\n  const tableColumns = [\r\n    {\r\n      title: \"Name\",\r\n      key: \"name\",\r\n      dataIndex: 'name',\r\n      render: (text: string, record: UserListItem) => {\r\n        const email = record?.email || \"email not set\"\r\n        return (\r\n          <div className=\"d-flex justify-content-left align-items-center\">\r\n            <Avatar src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSLIy6J349mbu7PUEYc5MLJ-G22K1R_lkK2ow&usqp=CAU\" />\r\n            <div>\r\n              <p>{text}</p><p>{email}</p>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: \"Projects\",\r\n      key: \"projectCount\",\r\n      dataIndex: 'projectCount'\r\n    },\r\n    {\r\n      title: \"Created On\",\r\n      key: \"createdOn\",\r\n      dataIndex: 'createdOn',\r\n      render: (text: string) => <span>{text ? moment(text).local().format(\"YY/MM/DD hh:mm\") : \"\"}</span>\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'name',\r\n      render: (text: string, record: UserListItem) => (\r\n        <Space size=\"middle\">\r\n\r\n          <Link to={`/admin/users/${record.userId}`}>\r\n            <EditOutlined />\r\n          </Link>\r\n          <Link to=\"\">\r\n            <SettingOutlined />\r\n          </Link>\r\n        </Space >\r\n      ),\r\n    },\r\n\r\n  ]\r\n\r\n\r\n  const sortByOptions = [{ label: \"Name\", value: \"name\" }];\r\n\r\n\r\n\r\n  const handleTabChange = (e: any) => {\r\n    setCurrentTab(e.key)\r\n\r\n  }\r\n\r\n  const getUsers = async () => {\r\n    if (!currentTab) return;\r\n\r\n    setLoading(true);\r\n    setUserList([]);\r\n    const data: any = {\r\n      PageNumber: page,\r\n      SearchValue: filter,\r\n      PageSize: 25,\r\n      roleId: currentTab\r\n    }\r\n\r\n    const [response, error] = await getUserList(data);\r\n    setLoading(false);\r\n    if (response) {\r\n      setUserList(response.data.data);\r\n    }\r\n\r\n    if (error) {\r\n      message.error(\"error\");\r\n    }\r\n  };\r\n\r\n  const getUserTypeMeta = async () => {\r\n    const [response, err] = await getUserMetaList()\r\n    if (response) {\r\n      const data = response.data;\r\n      if (Array.isArray(data) && data.length > 0) setCurrentTab(String(data[0].roleId))\r\n      setUserTypeMeta(data)\r\n    }\r\n    if (err) {\r\n      message.error(\"Error loading user role metadata\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUserTypeMeta()\r\n    getUsers()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (page || filter) {\r\n      getUsers();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [page, filter, currentTab]);\r\n\r\n\r\n  return (\r\n    <div className=\"user-list-page mt-4  mx-auto\">\r\n      <PageHeader\r\n        title=\"Users\"\r\n        extra={[\r\n          // <Button\r\n          //   key=\"1\"\r\n          //   type=\"primary\"\r\n          //   onClick={() => {\r\n          //     history.push(\"/admin/users/\");\r\n          //   }}\r\n          // >\r\n          //   New User\r\n          // </Button>,\r\n        ]}\r\n      />\r\n      <div>\r\n        <Divider />\r\n      </div>\r\n      <Row className=\"d-flex justify-content-between\">\r\n        <Col span={24} >\r\n          <Menu\r\n            mode=\"horizontal\"\r\n            onClick={handleTabChange}\r\n            style={{\r\n              background: \"none\",\r\n              borderBottom: \"none\",\r\n            }}\r\n            overflowedIndicator=\"\"\r\n            selectedKeys={currentTab ? [currentTab] : []}\r\n          >\r\n            {\r\n              userTypeMeta.map((item) => {\r\n                return (\r\n                  <Menu.Item key={item.roleId}>\r\n                    {item.name} <Tag>{item.userCount}</Tag>\r\n                  </Menu.Item>\r\n                )\r\n              })\r\n            }\r\n          </Menu>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"d-flex justify-content-between\">\r\n        <Col lg={16} md={16} xs={24} className=\"pe-0 pe-md-2\">\r\n          <Input\r\n            size=\"large\"\r\n            prefix={<SearchOutlined style={{ color: \"inherit\" }} />}\r\n            placeholder=\"Filter By Name...\"\r\n            value={search}\r\n            onChange={(e) => {\r\n              setSearch(e.target.value);\r\n            }}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={8} xs={24} md={8} className=\"d-flex align-items-center justify-content-center mt-2 mt-md-auto  \">\r\n          <span className=\"me-2 text-no-wrap\">Sort By:</span>\r\n          <Select size=\"large\" value={sortBy} options={sortByOptions} onSelect={(val) => setSortBy(val)} className=\"w-100\" />\r\n        </Col>\r\n      </Row>\r\n      <Divider />\r\n      <Row>\r\n        <Col span=\"24\">\r\n          <Table\r\n            className=\"table table-responsive\"\r\n            dataSource={userList}\r\n            columns={tableColumns}\r\n            loading={loading}\r\n            pagination={{\r\n              onChange: (page) => {\r\n                setPage(page);\r\n              },\r\n              pageSize: 25,\r\n            }}\r\n\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"],"sourceRoot":""}