{"version":3,"sources":["store/actions/projectActionCreators.ts","hoc/checkPermission.tsx","pages/Project/Project.tsx"],"names":["getProjectList","data","a","setHeaders","axiosInstance","url","method","params","response","createProject","getDropdownLists","category","CheckPermission","slug","children","getPermissions","includes","ProjectList","history","useHistory","useState","projectList","setProjectList","projectParmas","setProjectParams","loading","setLoading","page","setPage","search","setSearch","useDebounce","filter","selectedKey","setSelectedKeys","getProjects","PageNumber","SearchValue","PageSize","status","useEffect","className","title","extra","type","onClick","push","header","mode","e","key","style","background","borderBottom","selectedKeys","Item","totalRecords","lg","md","xs","placeholder","value","onChange","target","size","itemLayout","pagination","pageSize","total","dataSource","renderItem","item","index","actions","moment","updateDate","format","avatar","active","Meta","src","projectSlug","projectName","marginLeft","description","projectDescription"],"mappings":"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","file":"static/js/14.c44eca93.chunk.js","sourcesContent":["import axiosInstance from \"../../axios/axios\";\r\nimport { getProjectId, setHeaders } from \"../../util/localStorage.util\";\r\nimport { GET_PROJECT_DETAILS } from \"./types/projectTypes\";\r\n\r\nexport const getProjectList = async (data: any): Promise<[any, any]> => {\r\n  setHeaders();\r\n  try {\r\n    const response = await axiosInstance({\r\n      url: \"/Project/GetProjectListFilterByModule\",\r\n      method: \"POST\",\r\n      params: data,\r\n    });\r\n    return [response, null];\r\n  } catch (err) {\r\n    return [null, err];\r\n  }\r\n};\r\n\r\nexport const createProject = async (data: any): Promise<[any, any]> => {\r\n  setHeaders();\r\n  try {\r\n    const response = await axiosInstance({\r\n      url: \"/Project/AddProject\",\r\n      method: \"POST\",\r\n      data,\r\n    });\r\n    return [response, null];\r\n  } catch (err) {\r\n    return [null, err];\r\n  }\r\n};\r\n\r\nexport const getProjectDetails = async (): Promise<[any, any]> => {\r\n  setHeaders();\r\n  try {\r\n    const response = await axiosInstance({\r\n      url: `/Project/GetProjectByProjectId/${getProjectId()}`,\r\n      method: \"GET\",\r\n    });\r\n\r\n    return [response, null];\r\n  } catch (err) {\r\n    return [null, err];\r\n  }\r\n};\r\n\r\nexport const getDropdownLists = async (category: any): Promise<[any, any]> => {\r\n  setHeaders();\r\n  try {\r\n    const response = await axiosInstance({\r\n      url: `/Common/GetListItemByListItemCategorySystemName/${category}`,\r\n      method: \"GET\",\r\n    });\r\n    return [response, null];\r\n  } catch (err) {\r\n    return [null, err];\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { getPermissions } from \"../util/auth.util\";\r\n\r\nconst CheckPermission: any = ({\r\n  slug,\r\n  children,\r\n}: {\r\n  slug: string;\r\n  children: React.ReactNode;\r\n}) => {\r\n\r\n  if (slug) {\r\n    if (getPermissions()?.includes(slug)) {\r\n      return <>{children}</>;\r\n    }\r\n  }\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default CheckPermission;\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  List,\r\n  Skeleton,\r\n  Avatar,\r\n  Tag,\r\n  PageHeader,\r\n  Button,\r\n  Divider,\r\n  Input,\r\n  Menu,\r\n  Col,\r\n  Row,\r\n  message,\r\n} from \"antd\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getProjectList } from \"../../store/actions/projectActionCreators\";\r\nimport moment from \"moment\";\r\nimport CheckPermission from \"../../hoc/checkPermission\";\r\n\r\nconst ProjectList = () => {\r\n  const history = useHistory();\r\n  const [projectList, setProjectList] = useState([]);\r\n  const [projectParmas, setProjectParams] = useState<any>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [filter] = useDebounce(search, 500);\r\n\r\n  const [selectedKey, setSelectedKeys] = useState(\"0\");\r\n\r\n  const handleClick = (e: any) => {\r\n    setSelectedKeys(e.key);\r\n  };\r\n\r\n  const getProjects = async () => {\r\n    setLoading(true);\r\n    const [response, error] = await getProjectList({\r\n      PageNumber: page,\r\n      SearchValue: filter,\r\n      PageSize: 25,\r\n    });\r\n    setLoading(false);\r\n    if (response) {\r\n      setProjectList(response.data.data);\r\n      setProjectParams(response.data);\r\n    }\r\n    if (response?.status === 404) {\r\n      setProjectList([]);\r\n      setProjectParams(null);\r\n    }\r\n    if (error) {\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (page || filter) {\r\n      getProjects();\r\n    }\r\n  }, [page, filter]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mt-4 w-75 mx-auto \">\r\n        <PageHeader\r\n          title=\"Projects\"\r\n          extra={[\r\n            <CheckPermission key=\"newproject\" slug=\"project.create\">\r\n              <Button\r\n                key=\"1\"\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                  history.push(\"/project/new\");\r\n                }}\r\n              >\r\n                New Project\r\n              </Button>\r\n            </CheckPermission>,\r\n          ]}\r\n        />\r\n        <div>\r\n          <Divider />\r\n        </div>\r\n        <CheckPermission slug=\"project.read\">\r\n          <List\r\n            header={\r\n              <Row className=\"d-flex justify-content-between\">\r\n                <Menu\r\n                  mode=\"horizontal\"\r\n                  onClick={handleClick}\r\n                  style={{\r\n                    background: \"none\",\r\n                    borderBottom: \"none\",\r\n                  }}\r\n                  selectedKeys={[selectedKey]}\r\n                >\r\n                  <Menu.Item key=\"0\">\r\n                    Your Projects{\" \"}\r\n                    <Tag>\r\n                      {projectParmas?.totalRecords\r\n                        ? projectParmas?.totalRecords\r\n                        : 0}\r\n                    </Tag>\r\n                  </Menu.Item>\r\n                  <Menu.Item key=\"1\">\r\n                    Starred Project <Tag>0</Tag>\r\n                  </Menu.Item>\r\n                </Menu>\r\n\r\n                <Col lg={6} md={6} xs={24} className=\"mt-3\">\r\n                  <Input\r\n                    placeholder=\"Filter By Name...\"\r\n                    value={search}\r\n                    onChange={(e) => {\r\n                      setSearch(e.target.value);\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            }\r\n            loading={loading}\r\n            size=\"large\"\r\n            itemLayout=\"horizontal\"\r\n            pagination={{\r\n              onChange: (page) => {\r\n                setPage(page);\r\n              },\r\n              pageSize: 25,\r\n              total: projectParmas?.totalRecords,\r\n            }}\r\n            dataSource={projectList}\r\n            renderItem={(item: any, index: number) => (\r\n              <List.Item\r\n                key={index}\r\n                actions={[\r\n                  <Col lg={24} xs={0}>\r\n                    Updated {moment(item?.updateDate).format(\"Do MMMM , YYYY\")}\r\n                  </Col>,\r\n                ]}\r\n              >\r\n                <Skeleton avatar title={false} loading={false} active>\r\n                  <List.Item.Meta\r\n                    avatar={\r\n                      <Avatar src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSLIy6J349mbu7PUEYc5MLJ-G22K1R_lkK2ow&usqp=CAU\" />\r\n                    }\r\n                    title={\r\n                      <Row>\r\n                        <Col lg={12} xs={24}>\r\n                          <Button\r\n                            type=\"link\"\r\n                            onClick={() => {\r\n                              history.push(`/${item?.projectSlug}`);\r\n                            }}\r\n                          >\r\n                            {item?.projectName}\r\n                          </Button>\r\n\r\n                          <Tag style={{ marginLeft: 8 }}> Maintainer</Tag>\r\n                        </Col>\r\n                      </Row>\r\n                    }\r\n                    description={\r\n                      <Row>\r\n                        <Col lg={24} xs={0}>\r\n                          {item?.projectDescription}\r\n                        </Col>\r\n                        <Col lg={0} xs={24}>\r\n                          <p className=\"text-white\"> TC 0</p>\r\n                        </Col>\r\n                        <Col></Col>\r\n                      </Row>\r\n                    }\r\n                  />\r\n                  <Row>\r\n                    <Col lg={24} xs={0}>\r\n                      TC 0\r\n                    </Col>\r\n                  </Row>\r\n                </Skeleton>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </CheckPermission>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n"],"sourceRoot":""}