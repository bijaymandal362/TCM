{"version":3,"sources":["assets/images/eklogo.png","pages/Login/Login.tsx"],"names":["Login","Form","useForm","form","passwordInput","useRef","useState","loading","setLoading","history","useHistory","useEffect","current","focus","onFinish","values","a","customerLogin","userName","username","password","response","err","data","addAuthToLocalStorage","push","status","message","error","isUserLoggedIn","to","className","src","Logo","alt","span","Title","level","gutter","xs","sm","md","lg","EKLogo","layout","requiredMark","Item","name","label","rules","required","ref","prefix","UserOutlined","Password","LockOutlined","iconRender","visible","EyeTwoTone","EyeInvisibleOutlined","valuePropName","htmlType"],"mappings":"4QAAe,MAA0B,mC,gCC2L1BA,UA9JD,WACZ,MAAeC,IAAKC,UAAbC,EAAP,oBACMC,EAAgBC,iBAAO,MAE7B,EAA8BC,oBAAkB,GAAhD,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAUC,cAEhBC,qBAAU,WACJP,GAAiBA,EAAcQ,SAEjCR,EAAcQ,QAAQC,UAEvB,CAACT,IAEJ,IAAMU,EAAQ,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACfR,GAAW,GADI,SAEeS,YAAc,CAC1CC,SAAUH,EAAOI,SACjBC,SAAUL,EAAOK,WAJJ,mCAERC,EAFQ,KAEEC,EAFF,KAMXD,IACFA,EAASE,KAAT,SAA2B,EAC3BC,YAAsBH,EAASE,MAO/Bf,GAAW,GACXC,EAAQgB,KAAK,MAEXH,IACEA,EAAII,OACNC,IAAQC,MAAM,+BAAgC,GAIhDpB,GAAW,IAxBE,2CAAH,sDA4Bd,OAAIqB,cACK,cAAC,IAAD,CAAUC,GAAG,MAIpB,sBAAKC,UAAU,uBAAf,UACE,wBAAQA,UAAU,yBAAlB,SACE,qBAAKC,IAAKC,IAAMC,IAAI,MAAMH,UAAU,mCAEtC,qBAAKA,UAAU,kCAEf,eAAC,IAAD,CAAKI,KAAM,GAAIJ,UAAU,0BAAzB,UACE,cAAC,IAAD,CAAKA,UAAU,QAAf,SACE,cAAC,IAAD,CAAKI,KAAM,GAAX,SACE,cAAC,IAAWC,MAAZ,CAAkBC,MAAO,EAAzB,6CAMJ,eAAC,IAAD,CAAKN,UAAU,gBAAgBO,OAAQ,CAAEC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IAA5D,UACE,eAAC,IAAD,CACEN,KAAM,GACNI,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJX,UAAU,8BANZ,UAQE,qBACEC,IAAKW,EACLT,IAAI,MACJH,UAAU,qCAGZ,cAAC,IAAWK,MAAZ,CAAkBC,MAAO,EAAGN,UAAU,oBAAtC,yCAIA,mBAAGA,UAAU,gBAAb,6OAQF,cAAC,IAAD,CACEI,KAAM,GACNI,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJX,UAAU,gCANZ,SAQE,8BACE,qBAAKA,UAAU,gBAAf,SACE,eAAC,IAAD,CACEa,OAAO,WACPzC,KAAMA,EACNW,SAAUA,EACV+B,cAAc,EAJhB,UAME,cAAC,IAAKC,KAAN,CACEC,KAAK,WACLC,MAAM,oBACNC,MAAO,CACL,CACEC,UAAU,EACVvB,QAAS,kCANf,SAUE,cAAC,IAAD,CAAOwB,IAAK/C,EAAegD,OAAQ,cAACC,EAAA,EAAD,QAErC,cAAC,IAAKP,KAAN,CACEC,KAAK,WACLC,MAAM,WACNC,MAAO,CACL,CACEC,UAAU,EACVvB,QAAS,yBANf,SAUE,cAAC,IAAM2B,SAAP,CACEF,OAAQ,cAACG,EAAA,EAAD,IACRC,WAAY,SAACC,GAAD,OACVA,EAAU,cAACC,EAAA,EAAD,IAAiB,cAACC,EAAA,EAAD,SAIjC,cAAC,IAAKb,KAAN,CAAWC,KAAK,WAAWa,cAAc,UAAzC,SACE,cAAC,IAAD,CAAU7B,UAAU,qBAApB,2BAIF,cAAC,IAAKe,KAAN,UACE,cAAC,IAAD,CACEvC,QAASA,EACTwB,UAAU,oBACV8B,SAAS,SAHX","file":"static/js/19.025a11a4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/eklogo.e8846d7d.png\";","import {\r\n  EyeInvisibleOutlined,\r\n  EyeTwoTone,\r\n  LockOutlined,\r\n  UserOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Input,\r\n  Checkbox,\r\n  Row,\r\n  Col,\r\n  Typography,\r\n  message,\r\n} from \"antd\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport Logo from \"../../assets/images/logo2.png\";\r\nimport EKLogo from \"../../assets/images/eklogo.png\";\r\nimport {\r\n  customerLogin,\r\n  expireToken,\r\n} from \"../../store/actions/authActionCreators\";\r\nimport { isUserLoggedIn } from \"../../util/auth.util\";\r\nimport { addAuthToLocalStorage } from \"../../util/localStorage.util\";\r\n// import { useJwt } from \"react-jwt\";\r\n// import moment from \"moment\";\r\n\r\nconst Login = () => {\r\n  const [form] = Form.useForm();\r\n  const passwordInput = useRef(null);\r\n\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (passwordInput && passwordInput.current) {\r\n      // @ts-ignore: Object is possibly 'null'.\r\n      passwordInput.current.focus();\r\n    }\r\n  }, [passwordInput]);\r\n\r\n  const onFinish = async (values: any) => {\r\n    setLoading(true);\r\n    const [response, err] = await customerLogin({\r\n      userName: values.username,\r\n      password: values.password,\r\n    });\r\n    if (response) {\r\n      response.data[\"isAdmin\"] = false;\r\n      addAuthToLocalStorage(response.data);\r\n\r\n      // const users: any = getPermissions();\r\n      // expireToken(history, moment().unix() - users.exp);\r\n      // console.log(moment().unix());\r\n      // console.log(users.exp);\r\n\r\n      setLoading(false);\r\n      history.push(\"/\");\r\n    }\r\n    if (err) {\r\n      if (err.status === 401) {\r\n        message.error(\"Invalid username or password\", 2);\r\n      } else {\r\n        message.error(\"Invalid username or password\", 2);\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (isUserLoggedIn()) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"authentication__body\">\r\n      <header className=\"authentication__header\">\r\n        <img src={Logo} alt=\"tcm\" className=\"authentication__header__logo\" />\r\n      </header>\r\n      <div className=\"authentication__header__clear\"></div>\r\n\r\n      <Col span={20} className=\"authentication__wrapper\">\r\n        <Row className=\"mt__1\">\r\n          <Col span={24}>\r\n            <Typography.Title level={2}>\r\n              Test Case Management System\r\n            </Typography.Title>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"desc__wrapper\" gutter={{ xs: 8, sm: 16, md: 24 }}>\r\n          <Col\r\n            span={12}\r\n            xs={24}\r\n            sm={24}\r\n            md={24}\r\n            lg={14}\r\n            className=\"authentication__description\"\r\n          >\r\n            <img\r\n              src={EKLogo}\r\n              alt=\"tcm\"\r\n              className=\"authentication__main__logo mb__1\"\r\n            />\r\n\r\n            <Typography.Title level={3} className=\"w__100 text__left\">\r\n              A Complete Testing Platform\r\n            </Typography.Title>\r\n\r\n            <p className=\"text__justify\">\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Recusandae aut facilis eveniet dolore rem cum veritatis nulla\r\n              perferendis officia beatae porro, tempore vitae maxime magnam\r\n              molestias expedita obcaecati optio qui.\r\n            </p>\r\n          </Col>\r\n\r\n          <Col\r\n            span={12}\r\n            xs={24}\r\n            sm={24}\r\n            md={24}\r\n            lg={10}\r\n            className=\"authentication__content login\"\r\n          >\r\n            <div>\r\n              <div className=\"form__wrapper\">\r\n                <Form\r\n                  layout=\"vertical\"\r\n                  form={form}\r\n                  onFinish={onFinish}\r\n                  requiredMark={false}\r\n                >\r\n                  <Form.Item\r\n                    name=\"username\"\r\n                    label=\"Username or Email\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Username or Email is required\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input ref={passwordInput} prefix={<UserOutlined />} />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Password is required\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input.Password\r\n                      prefix={<LockOutlined />}\r\n                      iconRender={(visible) =>\r\n                        visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\r\n                      }\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item name=\"remember\" valuePropName=\"checked\">\r\n                    <Checkbox className=\"checkbox-container\">\r\n                      Remember me\r\n                    </Checkbox>\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    <Button\r\n                      loading={loading}\r\n                      className=\"login__btn w__100\"\r\n                      htmlType=\"submit\"\r\n                    >\r\n                      Sign In\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}